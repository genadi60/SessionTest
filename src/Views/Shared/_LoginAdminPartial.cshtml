@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@if (!SignInManager.IsSignedIn(User) || !User.IsInRole("Admin"))
{
    <li class="nav-item">
        <form asp-action="PackageDetails" asp-controller="Package" class="form-inline input-group input-group-sm mt-1">
            <input class="form-control mr-sm-1 rounded" name="search" type="search" placeholder="Package Code" aria-label="Search">
            <button class="btn btn-outline-secondary btn-sm my-2 my-sm-0" type="submit"><i class="fas fa-search"></i></button>
        </form>
    </li>
}
@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Package" asp-action="Packages">Packages</a>
    </li>
    <div class="dropdown">
        <button class="btn btn-link navbar-btn nav-link navbar-link dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Create
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            <a class="dropdown-item" asp-area="" asp-controller="Product" asp-action="Create">Create Product</a>
            <a class="dropdown-item" asp-area="" asp-controller="Category" asp-action="Create">Create Category</a>
            <a class="dropdown-item" asp-area="" asp-controller="Blog" asp-action="Create">Create Blog</a>
        </div>
    </div>
}